{
  "name": "port-digital-twin",
  "version": "1.0.0",
  "scripts": {
    "install-all": "cd frontend && npm install && cd ../backend && npm install",
    "setup-python": "cd vessel_modelling && pip install -r requirements.txt && cd ../dc_power_flow && python -m venv venv && source venv/bin/activate && pip install -r requirements.txt",
    "dev": "concurrently \"cd dc_power_flow && source venv/bin/activate && python api_server.py\" \"cd dc_power_flow && bash run_simulation.sh\" \"cd backend && npm run dev\" \"cd frontend && npm run dev\" \"cd vessel_modelling && python3 api_server.py\"",
    "dev:with-simulation": "concurrently \"cd backend && npm run dev\" \"cd frontend && npm run dev\" \"cd dc_power_flow && source venv/bin/activate && python api_server.py > simulation.log 2>&1\" \"cd vessel_modelling && python api_server.py > vessel.log 2>&1\"",
    "build": "concurrently \"cd backend && npm run build\" \"cd frontend && npm run build\"",
    "start": "concurrently \"cd backend && npm start\" \"cd frontend && npm start\"",
    "simulation": "cd dc_power_flow && source venv/bin/activate && python api_server.py > simulation.log 2>&1",
    "vessel": "cd vessel_modelling && python3 api_server.py > vessel.log 2>&1",
    "install-vessel-deps": "cd vessel_modelling && pip install -r requirements.txt",
    "setup-dc-venv": "cd dc_power_flow && python -m venv venv && source venv/bin/activate && pip install -r requirements.txt"
  },
  "devDependencies": {
    "concurrently": "^8.2.2"
  },
  "dependencies": {
    "@deck.gl/aggregation-layers": "^9.1.4",
    "math.gl": "^4.1.0",
    "react-map-gl": "^8.0.1",
    "recharts": "^2.15.3"
  }
}
